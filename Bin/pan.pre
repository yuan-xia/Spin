# 1 "../Examples/dlockServer.pml"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 366 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "../Examples/dlockServer.pml" 2


mtype = { REQUEST, RELEASE, GRANT };

chan request_chan[5] = [5] of { mtype, byte };
chan grant_chan[5] = [5] of { mtype };

bool lock_available = true;
int current_holder = -1;

proctype process(int id)
{
    do
    :: true ->



        request_chan[id]!REQUEST, id;




        grant_chan[id]?GRANT;
        atomic{
        lock_available = false;
        current_holder = id;
        printf("State changed: lock_available: %d current_holder: %d\n", lock_available, current_holder);
        }




        atomic{
        request_chan[id]!RELEASE;

        lock_available = true;
        current_holder = -1;
        printf("State changed: lock_available: %d current_holder: %d\n", lock_available, current_holder);
        }


    od
}

proctype lock_server()
{
    byte requesters[5];
    bool granted[5];
    mtype msg;
    byte mid;
    int i;
    do
    :: true ->


       for (i : 0 .. 5 -1)
       {
        if
        :: request_chan[i]?msg,mid->
            if
            :: msg == REQUEST->

                if
                :: lock_available ->

                    grant_chan[mid]!GRANT;
                    granted[mid] = true;
                :: else ->

                    granted[mid] = false;
                fi;
            :: msg == RELEASE ->

                granted[mid] = false;
            fi;
        :: else ->


            skip;
        fi;


        }


    od
}

init
{
    run lock_server();
    run process(0);
    run process(1);
    run process(2);
    run process(3);
    run process(4);
}
